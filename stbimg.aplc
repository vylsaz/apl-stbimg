:Class stbimg
  (⎕IO ⎕ML)←0 1

  GetExt←{⍺←''
    mac win←∨/¨'Mac' 'Windows'⍷¨⊂⊃'.'⎕WG'APLVersion'
    ⍵,(⍺ '.so' '.dylib')⊃⍨mac+~win
  }
  GetExtWarn←{
    f←'.dll'GetExt ⍵
    ~⎕NEXISTS f:22⎕SIGNAL⍨⎕←f,' not found' 
    GetExt ⍵
  }
  :Field Private Shared ReadOnly LIB←GetExtWarn 'stbimg'
  :Field Private Shared ReadOnly ffi←⎕NS⍬

  Def←{
    (n a)←⊆⍺
    3=ffi.⎕NC a:11⎕SIGNAL⍨⎕←'redefining ',a
    0::11⎕SIGNAL⍨⎕←'could not load ',n
    (r p)←⍵
    a(ffi.⎕NA)r,' ',LIB,'|',n,' ',p
  }

  'STBIMG_Info'    Def 'I4' '<0UTF8[] >I4 >I4 >I4'
  'STBIMG_Load_I1' Def '' '<0UTF8[] I4 >I1[]'
  
  'STBIMG_Info_Mem'                   Def 'I4' '<U1[] I4 >I4 >I4 >I4'
  'STBIMG_Info_Mem' 'STBIMG_Info_Chr' Def 'I4' '<C1[] I4 >I4 >I4 >I4'
  'STBIMG_Load_Mem_I1'                      Def '' '<U1[] I4 I4 >I1[]'
  'STBIMG_Load_Mem_I1' 'STBIMG_Load_Chr_I1' Def '' '<C1[] I4 I4 >I1[]'

  'STBIMG_Save_PNG' Def 'I4' '<0UTF8[] I4 I4 I4 <I1[]'
  'STBIMG_Save_BMP' Def 'I4' '<0UTF8[] I4 I4 I4 <I1[]'
  'STBIMG_Save_JPG' Def 'I4' '<0UTF8[] I4 I4 I4 <I1[]'
  'STBIMG_Save_TGA' Def 'I4' '<0UTF8[] I4 I4 I4 <I1[]'
  
  'STBIMG_Resize_I1' Def 'I4' '<I1[] I4 I4 >I1[] I4 I4 I4'

  'STBIMG_Save_PNG_Mem' Def 'P' 'I4 I4 I4 <I1[] >I4'
  'STBIMG_Encode_64' Def 'I4' 'P I4 >UTF8[] I4'

  ∇ info←Info name
    :Access Public Shared
    :If 0≡0 2∊⍨10|⎕DR name ⋄ 'Not a file name'⎕SIGNAL 11 ⋄ :EndIf
    info←ffi.STBIMG_Info (name 0 0 0)
  ∇

  ∇ data←{ch} Load name;ok;h;w;n
    :Access Public Shared
    (ok h w n)←Info name
    :If 0=⎕NC'ch' ⋄ ch←n ⋄ :EndIf

    :If ~ok ⋄ ('Failed to load file ',name)⎕SIGNAL 22 ⋄ :EndIf
    :If ~0=⍴⍴ch
    :OrIf ~ch∊1 2 3 4
      '# of channels must be 1, 2, 3 or 4'⎕SIGNAL 11
    :EndIf

    data←h w ch⍴ffi.STBIMG_Load_I1 (name ch (h×w×ch))
  ∇

  ∇ info←InfoMem mem
    :Access Public Shared
    :If 80≡⎕DR mem
      info←ffi.STBIMG_Info_Chr (mem (≢mem) 0 0 0)
    :Else
      info←ffi.STBIMG_Info_Mem (mem (≢mem) 0 0 0)
    :EndIf
  ∇ 

  ∇ data←{ch} LoadMem mem;ok;h;w;n
    :Access Public Shared
    (ok h w n)←InfoMem mem
    :If 0=⎕NC'ch' ⋄ ch←n ⋄ :EndIf
    
    :If ~ok ⋄ 'Failed to load from buffer'⎕SIGNAL 22 ⋄ :EndIf
    :If ~0=⍴⍴ch
    :OrIf ~ch∊1 2 3 4
      '# of channels must be 1, 2, 3 or 4'⎕SIGNAL 11
    :EndIf

    :If 80≡⎕DR mem
      data←h w ch⍴ffi.STBIMG_Load_Chr_I1 (mem (≢mem) ch (h×w×ch))
    :Else
      data←h w ch⍴ffi.STBIMG_Load_Mem_I1 (mem (≢mem) ch (h×w×ch))
    :EndIf
  ∇

  Shape←{
    r←≢⍴⍵
    r≡3:⍴⍵
    r≡2:1,⍨⍴⍵
    'Image data should be rank 2 or 3'⎕SIGNAL 11
  }

  ∇ name←name Save data;ext;h;w;ch;ok
    :Access Public Shared
    ext←¯1⎕C {1↓2⊃1⎕NPARTS⍵} name

    (h w ch)←Shape data  
    :If ~ch∊1 2 3 4
      '# of channels must be 1, 2, 3 or 4'⎕SIGNAL 11
    :EndIf  

    :Select ¯1⎕C ext
    :Case 'png' 
      ok←ffi.STBIMG_Save_PNG (name h w ch (,data))
    :Case 'bmp'
      ok←ffi.STBIMG_Save_BMP (name h w ch (,data)) 
    :CaseList 'jpg' 'jpeg'
      ok←ffi.STBIMG_Save_JPG (name h w ch (,data))
    :Case 'tga'
      ok←ffi.STBIMG_Save_TGA (name h w ch (,data)) 
    :Else  
      ('File extension ',ext,' is not supported')⎕SIGNAL 11
    :EndSelect

    :If ok≡0
      ('Failed to save file ',name)⎕SIGNAL 22 ⋄ 
    :EndIf
  ∇

  PrivResize←{
    (oh ow)←⍺ 
    (ih iw ch)←Shape ⍵
    (ok out)←ffi.STBIMG_Resize_I1 ((,⍵) ih iw (oh×ow×ch) oh ow ch)
    
    ~ok:'Failed to resize'⎕SIGNAL 11
    oh ow ch⍴out
  }

  ∇ output←size Resize input
    :Access Public Shared
    output←size PrivResize input
  ∇
  
  ∇ output←ratio Scale input;size
    :Access Public Shared
    size←⌊ratio×¯1↓⍴input
    output←size PrivResize input 
  ∇

  :Field Private Shared ReadOnly LOWER_LIMIT←400 400
  
  ⍝ size: (height,width)
  ∇ r←Squeeze size;upper_limit
    :Access Private Shared
    upper_limit←¯40 0+(⊃×100÷⊢/)'.'⎕WG'DevCaps'
    r←size
    :If ∨/size>upper_limit
      r←⌊size×⌊/upper_limit÷size 
    :ElseIf ∨/size<LOWER_LIMIT 
      r←⌊size×⌈/LOWER_LIMIT÷size 
    :Endif
  ∇ 

  IsChar←0 2∊⍨10|⎕DR

  ∇ {r}←{hd} ShowForm data;name;ok;h;w;ch;pixels;size
    :Access Public Shared
    :If 0=⎕NC'hd' ⋄ hd←'∆h' ⋄ :EndIf

    :If IsChar data
      name←data
      (ok h w ch)←Info name
      :If ~ok ⋄ ('Failed to load file ',name)⎕SIGNAL 22 ⋄ :EndIf 
      size←Squeeze h w 
      r←hd ⎕WC'Form'('Caption'name)('Coord' 'Pixel')('Size'size)
      (hd,'.bit')⎕WC'Bitmap'('File'name)
      (hd,'.img')⎕WC'Image'(0 0)('Picture'(hd,'.bit'))('Size'size)
    :Else
      pixels←((256⊥3⍴⊢↑⍨1+2×2<≢)⍤1)256|(Shape⍴⊢)data
      size←Squeeze ⍴ pixels
      r←hd ⎕WC'Form'('Caption' 'Show')('Coord' 'Pixel')('Size'size)
      (hd,'.bit')⎕WC'Bitmap'('CBits'pixels)
      (hd,'.img')⎕WC'Image'(0 0)('Picture'(hd,'.bit'))('Size'size)
    :EndIf
  ∇

  ∇ HTML←EmitHTML data;h;w;ch;ptr;len;nchars;ok;enc;URI
    :Access Public Shared 

    (h w ch)←Shape data 
    :If ~ch∊1 2 3 4
      '# of channels must be 1, 2, 3 or 4'⎕SIGNAL 11
    :EndIf

    (ptr len)←ffi.STBIMG_Save_PNG_Mem (h w ch (,data) 0)    
    nchars←4×⌊3÷⍨2+len
    (ok enc)←ffi.STBIMG_Encode_64 (ptr len nchars nchars)

    :If ~ok ⋄ 'Failed to encode image'⎕SIGNAL 6 ⋄ :EndIf
    
    URI←'data:image/png;base64,',enc
    HTML←'<img src="',URI,'" />'
  ∇   

  ⍝ Note: multiple HTMLRenderers behave weird without &

  ∇ {r}←{hd} Show data;HR
    :Access Public Shared 
    :If 0=⎕NC'hd' ⋄ hd←'∆h' ⋄ :EndIf

    HR←⎕TSYNC{
      IsChar ⍵: ⍺ ⎕WC'HTMLRenderer'('URL'('file:///',⊃,/1 ⎕NPARTS ⍵))
      x←'<!DOCTYPE html><html><head><title>Show</title><style>'
      x,←'*{margin:0;padding:0;background-color:black;}'
      x,←'div{display:grid;height:100%;}img{width:100%;height:100vh;'
      x,←'margin:auto;object-fit:contain;image-rendering:pixelated;}'
      x,←'</style></head><body><div>',(EmitHTML ⍵),'</div></body></html>'
      ⍺ ⎕WC'HTMLRenderer'('HTML'x)
    }&
    r←hd HR data
  ∇

  ∇ uint←ToUnsigned byte
    :Access Public Shared
    uint←256|byte
  ∇

  ∇ byte←ToSigned uint
    :Access Public Shared
    byte←¯128+256|128+uint
  ∇

  ∇ norm←Normalize byte
    :Access Public Shared
    norm←255÷⍨256|byte
  ∇

  ∇ byte←Denormalize norm
    :Access Public Shared
    byte←¯128+256|128+⌊255×0⌈1⌊norm
  ∇

  ∇ grid←Interleave chan
    :Access Public Shared
    grid←2 0 1⍉chan
  ∇

  ∇ chan←Deinterleave grid
    :Access Public Shared
    chan←1 2 0⍉grid
  ∇

  :Field Public Shared ReadOnly Y←1
  :Field Public Shared ReadOnly YA←2
  :Field Public Shared ReadOnly RGB←3
  :Field Public Shared ReadOnly RGBA←4
  :Field Public Shared ReadOnly GRAY←1
  :Field Public Shared ReadOnly GRAY_ALPHA←2
  :Field Public Shared ReadOnly RGB_ALPHA←4 

:EndClass
